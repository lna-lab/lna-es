name: LNA-ES CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-validate:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        task: [classify, extractor]
        sample: [test_sample, literature, science, business]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies (CI minimal)
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements-ci.txt ]; then
            pip install -r requirements-ci.txt
          else
            pip install numpy PyYAML
          fi

      - name: Show model info
        run: |
          python -m src.cli models --pretty || true

      - name: Prepare samples
        run: |
          mkdir -p samples
          printf '%s
' '竹取物語の冒頭部分。今は昔、竹取の翁といふ者ありけり。' > samples/literature.txt
          printf '%s
' '水の分子構造と化学結合について説明する。水は極性分子であり、共有結合と水素結合が重要である。' > samples/science.txt
          printf '%s
' '効果的なマーケティング戦略の基本原則について述べる。市場分析、価値提案、セグメンテーションとポジショニング。' > samples/business.txt

      - name: Run matrix task
        run: |
          case "${{ matrix.sample }}" in
            test_sample) INPUT=test_sample.txt ;;
            literature)  INPUT=samples/literature.txt ;;
            science)     INPUT=samples/science.txt ;;
            business)    INPUT=samples/business.txt ;;
          esac
          if [ "${{ matrix.task }}" = "classify" ]; then
            python -m src.cli classify --file "$INPUT" --pretty > out_classify_${{ matrix.sample }}.json
          else
            python lna-es-app/apps/extractor/extractor.py --input "$INPUT" --outdir out --datadir data
          fi

      - name: Upload artefacts
        uses: actions/upload-artifact@v4
        with:
          name: lna-es-artefacts-${{ github.run_number }}-${{ matrix.task }}-${{ matrix.sample }}
          path: |
            out/**
            data/**
            out_classify_*.json

  agent-comm:
    runs-on: ubuntu-latest
    needs: build-and-validate
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Start Lina API and test curl
        run: |
          python -m pip install --upgrade pip
          python -m automation.lina_api &
          sleep 1
          curl -sS http://localhost:3001/health
          curl -sS -X POST http://localhost:3001/lina/benchmark \
            -H 'Content-Type: application/json' \
            -d '{"target":"test_sample.txt","methods":["cli","extractor"],"metrics":["time"]}'
          curl -sS -X POST http://localhost:3001/lina/consistency -H 'Content-Type: application/json' -d '{"agg":"sentence_mean"}'
      - name: Upload automation artefacts
        uses: actions/upload-artifact@v4
        with:
          name: lna-es-automation-${{ github.run_number }}
          path: |
            out/metrics.json
